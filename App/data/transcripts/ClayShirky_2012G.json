{
  "id": "ClayShirky_2012G",
  "transcript": "i want to talk to you today about something the open source programming world can teach democracy but before that a little preamble let 's this is martha payne martha 's a 9 year old scot who lives in the council of argyll and bute a couple months ago payne started a food blog called neverseconds can you spot the vegetable and as sometimes happens including on my favorite category pieces of hair found in food this was a zero day that 's good and then two weeks ago yesterday she posted this but my head teacher pulled me out of class today and told me thank so voluminous so unanimous that the council of argyll and bute reversed themselves the same day and said we would we would never censor a nine year old this morning and this up the question what made them think they could get away with something like that and the answer is all of human history prior to now so now this isn 't just a contemporaneous question this is something we 've faced several times over the last few centuries when the telegraph came along it was clear the television a medium that allowed us not just to hear but see literally see what was going on elsewhere in the world what would this lead to you guessed it world sorry for the spoiler alert but even the printing press even the printing press was assumed to be a tool that was going to enforce the protestant reformation and you know the thirty years ' war all right so what all of these predictions of world peace got right is that when a lot of new ideas suddenly come into circulation the more ideas there are in circulation the more ideas there are for any individual to disagree with when we look back on the printing press in the early years we like what happened we are a this is the cover of philosophical transactions the first scientific journal ever published in english in the middle of the 1600s and it was created by a group of people who had been calling themselves the invisible college a group of natural philosophers and they wanted to improve the way natural philosophers argued with each other you have to publish not just your claims but how you did the experiment if you don 't tell us how you did it we won 't trust you but the other thing they needed was speed they had to quickly synchronize what other natural philosophers knew otherwise you couldn 't get the right kind of argument going but the book was the wrong tool it was too slow and so they invented the scientific journal as a way of synchronizing the argument across the community of natural check gold star on that one youtube is just a gold mine better arguing and if i had to pick a group that i think is our invisible college is our generation 's collection of people trying to take these tools and to press it into service not for more arguments but for better i 'd pick the open source programmers and the computer it 's meant to run on and that 's if one person is writing it once you get more and this problem grows larger the more programmers are involved the problem of managing a large software project is the problem of keeping this social chaos at bay now for decades there has been a canonical solution to this problem which is to use something called a version control system and a version control system does what is says on the tin it provides a canonical copy of the software the only programmers who can change it are people who 've specifically been given permission to access it and they 're only allowed to access the this is feudalism one owner many but there was one programmer who decided that this wasn 't the way to work this is linus torvalds torvalds is the most famous open source programmer looked at the way the open source movement had been dealing with this problem so most open source projects just held their noses and adopted the feudal management systems torvalds said no i 'm not going to do that his point of view on this was very clear and he wasn 't going to adopt anything that didn 't work the way the linux community worked and to give you a sense of how enormous a decision like this was this is a map of the internal dependencies within linux within the linux operating system which sub parts of the program rely on which other torvalds ran this not with automated tools but out of his email box people would literally mail him changes that and then fifteen years after looking at linux and figuring out how the community worked he said i think i know how to write a version control system for free people and he called it and when people draw diagrams of git workflow and you don 't have to understand what the circles and boxes and arrows mean to see that this is a far more complicated way of but this is also the thing that brings the chaos back this is a screenshot from github the premier git hosting service and every time a programmer uses git to make any important change at all modifying an existing one one merging two files git creates this kind of signature this long string of numbers and letters here but without any central coordination every git system generates this number the same this has the following effect a programmer in edinburgh and a programmer in entebbe can both get the same a copy of the same piece of software each of them can make changes and they can merge them after the fact even if they didn 't know of each other 's existence this is the big change i tell you all of this not to convince you that it 's great that programmers now have a tool that supports their philosophical way of working although i think that is great i tell you all of this because of what i think it means for the way communities come together you start to see communities form this is a graph of the ruby community it 's an open source programming language and all of the interconnections between the people this is now not a software graph but a people graph all of the interconnections among the people working on that project so there are two good reasons to think that this kind of technique can be applied to democracies in general and in particular to the law when you make the claim in fact you often get this reaction which is are you talking about the thing with the singing cats like is that the thing you think is going to be good for society to which i have here 's the thing with the singing cats that always happens and i don 't just mean that always happens with the internet i mean that always happens with media full stop it did not take long after the rise of the commercial printing press before someone figured out that erotic novels were a good idea you don 't have to have an economic incentive to sell books very long before someone says hey you know what i bet people would pay for it took people another one hundred and fifty years to even think of the scientific journal so so the harnessing by the invisible college of the printing press to create the scientific journal was phenomenally important but it and it didn 't happen fast so if you 're going to look for where the change is happening you have to and the dependencies of one law on other laws for the overall effect so there 's that as a site for source code management but they need to be resolved to one canonical copy and you look around there are and millions of projects almost all of which are source code but if you look around the edges you can see people experimenting with the political ramifications of a system like that including my favorite use ever of the cablegate cables which is a tool for detecting naturally occurring the new york senate has put up something called open legislation also hosting it on github again for all of the reasons of updating and fluidity you can go and pick your senator and then you can see a list of bills they have sponsored and they 've put it up there not somebody put up a tool during the copyright debate last year in the senate saying it 's strange that hollywood has more access to canadian legislators than canadian citizens do why don 't we use when a change was made who made it and what the change is the stuff in red is the stuff that got deleted the stuff in green is the stuff that got added programmers take this capability for granted no democracy anywhere in the even though those are the things done with our consent and with our money but it 's not somebody put a question up on quora saying why is it that lawmakers don 't use distributed version control this graphically was the answer is power the people experimenting with participation don 't have legislative power and the people who have legislative power are not experimenting with participation but transparency is openness in only so consider this but the thing that kept them there was political will it was the expectation of the citizens that she would not be censored we 're in with these collaboration tools we have them we 've seen them they work can we use them can we apply the techniques that worked here to this t s eliot once said one of the most momentous things that can happen to a culture is that they acquire a new form of prose i think that 's wrong but now this right a new form of arguing has been invented in our lifetimes in the last decade in fact it 's large it 's distributed it the question for us now is are we going to let the programmers keep it to themselves or are we going to try and take it and press it into service for society at large"
}